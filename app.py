# app.py (C√ìDIGO COMPLETO FINAL PARA O STREAMLIT)

import streamlit as st
import requests  # NECESS√ÅRIO para chamar o Cloud Run
import os

# --- CONFIGURA√á√ÉO DA CHAVE SECRETA (AGORA √â SOMENTE A URL DO ENDPOINT) ---

# Pega a URL do servidor RAG do Streamlit Secrets
# O Streamlit monta os secrets em um dicion√°rio acess√≠vel via st.secrets.get()
RAG_ENDPOINT_URL = st.secrets.get("RAG_ENDPOINT_URL")

# --- FUN√á√ÉO PRINCIPAL (AGORA √â APENAS UM CLIENTE HTTP) ---
def ask_rag(query):
    """
    Faz uma chamada HTTP POST para o servidor Cloud Run/GCF.
    """
    if not RAG_ENDPOINT_URL:
        return "Erro de Configura√ß√£o: RAG_ENDPOINT_URL n√£o encontrado nos segredos do Streamlit. Por favor, adicione a URL do Cloud Run."
        
    try:
        # Adiciona o segmento de rota para o endpoint que configuramos
        url_com_endpoint = RAG_ENDPOINT_URL + "/rag_endpoint"
        
        # Envia a pergunta do usu√°rio como JSON para o servidor
        response = requests.post(
            url_com_endpoint, 
            json={'query': query}
        )
        response.raise_for_status() # Lan√ßa exce√ß√£o para erros 4xx/5xx

        # Retorna a resposta JSON (que cont√©m a chave 'answer' enviada pelo Cloud Run)
        return response.json().get('answer', "Resposta inv√°lida do servidor.")

    except requests.exceptions.HTTPError as e:
        # Captura erros do servidor Cloud Run (ex: 500)
        return f"Erro no Servidor RAG (HTTP): {e}. Verifique os logs do Cloud Run para detalhes."
    except requests.exceptions.ConnectionError:
        return "Erro de Conex√£o: O servidor RAG n√£o est√° acess√≠vel. Verifique se a URL do endpoint est√° correta."
    except Exception as e:
        return f"Erro inesperado ao conectar ao Servidor RAG: {e}"

# -------------------------------------------------------------
# ESTRUTURA E LAYOUT DO STREAMLIT 
# -------------------------------------------------------------

# Esta √© a linha onde o erro de sintaxe est√° ocorrendo no seu c√≥digo (provavelmente porque foi colocado 
# ap√≥s um 'try' sem um 'except' ou 'finally' correspondente).
st.set_page_config(page_title="Enciclop√©dia RAG Champlin", layout="centered")

# --- Cabe√ßalho ---
st.title("üìñ Caf√© com B√≠blia")
st.write("Fa√ßa uma pergunta ou deixe uma refer√™ncia b√≠blica.")
st.caption("Sua Pergunta de Estudo B√≠blico:")

# --- Caixa de Chat e L√≥gica de Entrada ---
user_query = st.text_input(
    label="Sua Pergunta de Estudo B√≠blico:",
    label_visibility="collapsed",
    placeholder="Qual a explica√ß√£o para o fratric√≠dio de Caim contra Abel conforme a enciclop√©dia?",
    key="user_query"
)

# --- Bot√£o e Chamada RAG ---
if st.button("Buscar Resposta"):
    if user_query:
        # Certifique-se de que a URL do endpoint foi configurada
        if not RAG_ENDPOINT_URL:
            st.error("Erro: A URL do servidor RAG n√£o foi configurada nos segredos do Streamlit.")
        else:
            with st.spinner("Buscando e processando a resposta do Cloud Run..."):
                answer = ask_rag(user_query)
            
            # Exibe a resposta formatada
            st.subheader("Resposta da Enciclop√©dia:")
            st.write(answer)
    else:
        st.error("Por favor, digite uma pergunta.")

# --- Fim do layout ---
