# app.py (Novo Frontend Streamlit)
import streamlit as st
import requests
import json
import os

# --- CONFIGURA√á√ÉO DA API ---
# COLOQUE SUA URL REAL DO VERCEL AQUI, ADICIONANDO /rag_endpoint NO FINAL
VERCEL_API_URL = "https://enciclopedia-rag-compartilhada.vercel.app/rag_endpoint" 


# --- FUN√á√ÉO DE CHAMADA ---
def buscar_resposta(pergunta):
    """Envia a pergunta para a API RAG no Vercel."""
    
    # 1. Checagem de URL (Verifique se a URL foi substitu√≠da)
    if VERCEL_API_URL.startswith("https://SEU-DOM√çNIO-VERCEL"):
        # Se o usu√°rio n√£o substituiu a URL, retorna um erro de configura√ß√£o
        return "Erro de Configura√ß√£o: Por favor, substitua 'SEU-DOM√çNIO-VERCEL' na linha 9 do c√≥digo por sua URL real."

    # 2. Chamada HTTP
    try:
        # A API espera um corpo JSON com a chave 'query'
        payload = {"query": pergunta}
        
        # Faz a chamada POST para o Vercel
        response = requests.post(VERCEL_API_URL, json=payload, timeout=90)
        
        # Levanta exce√ß√£o para c√≥digos de status 4xx/5xx
        response.raise_for_status() 
        
        # 3. Processamento da Resposta
        resposta_json = response.json()
        return resposta_json.get("answer", "A API n√£o retornou o campo 'answer'.")

    except requests.exceptions.HTTPError as e:
        # Erros 4xx/5xx (que incluem os erros da API)
        if response.status_code == 500:
            # Retorna a mensagem de erro que a API enviou (Ex: FALHA CR√çTICA)
            return f"Erro no Servidor RAG (500): {response.json().get('answer', 'Erro interno do servidor Vercel. Verifique os logs.')}"
        else:
            return f"Erro na Requisi√ß√£o RAG ({response.status_code}): {response.text}"
    except requests.exceptions.ConnectionError:
        return "Erro de Conex√£o: N√£o foi poss√≠vel alcan√ßar a API do Vercel. Verifique a URL e o status do deploy."
    except Exception as e:
        return f"Erro Inesperado: {e}"


# --- INTERFACE STREAMLIT ---
st.set_page_config(page_title="Caf√© com B√≠blia", layout="centered")
st.title("üìö Caf√© com B√≠blia ‚òï")
st.markdown("Fa√ßa uma pergunta ou deixe uma refer√™ncia b√≠blica.")

# Caixa de entrada do usu√°rio
pergunta_usuario = st.text_input("Sua Pergunta de Estudo B√≠blico:", 
                                 placeholder="Ex: Qual o nome do Filho do Sacerdote Zacarias?")

# Bot√£o de busca
if st.button("Buscar Resposta"):
    if pergunta_usuario:
        with st.spinner("Consultando Enciclop√©dia Champlin..."):
            resposta = buscar_resposta(pergunta_usuario)
            
            st.subheader("Resposta da Enciclop√©dia:")
            # Exibe a resposta (ou o erro)
            st.write(resposta)
    else:
        st.error("Por favor, digite uma pergunta v√°lida.")
